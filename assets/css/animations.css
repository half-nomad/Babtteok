/* =============================================================================
   Animations CSS - 밥떡한끼 슬라이드 애니메이션 효과
   ============================================================================= */

/* =============================================================================
   슬라이드 전환 애니메이션
   ============================================================================= */

/* 슬라이드 진입 애니메이션 */
.slide.entering {
    animation: slideInFromRight 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.slide.exiting {
    animation: slideOutToLeft 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes slideInFromRight {
    0% {
        transform: translateX(100%);
        opacity: 0;
    }
    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideOutToLeft {
    0% {
        transform: translateX(0);
        opacity: 1;
    }
    100% {
        transform: translateX(-100%);
        opacity: 0;
    }
}

/* 역방향 애니메이션 (이전 버튼 클릭시) */
.slide.entering-reverse {
    animation: slideInFromLeft 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.slide.exiting-reverse {
    animation: slideOutToRight 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes slideInFromLeft {
    0% {
        transform: translateX(-100%);
        opacity: 0;
    }
    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideOutToRight {
    0% {
        transform: translateX(0);
        opacity: 1;
    }
    100% {
        transform: translateX(100%);
        opacity: 0;
    }
}

/* =============================================================================
   슬라이드 내용 진입 애니메이션
   ============================================================================= */

/* 기본 페이드인 애니메이션 */
.slide.active .slide-content > * {
    animation: contentFadeInUp 1s ease-out;
    animation-fill-mode: both;
}

/* 순차적 애니메이션 지연 */
.slide.active .slide-header {
    animation-delay: 0.2s;
}

.slide.active .content-grid {
    animation-delay: 0.4s;
}

.slide.active .solution-grid {
    animation-delay: 0.4s;
}

@keyframes contentFadeInUp {
    0% {
        opacity: 0;
        transform: translateY(40px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

/* =============================================================================
   특수 요소 애니메이션
   ============================================================================= */

/* 통계 숫자 카운트업 애니메이션 */
.stat-number {
    position: relative;
    overflow: hidden;
}

.stat-number.counting {
    animation: numberPulse 0.1s ease-in-out;
}

@keyframes numberPulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
}

/* 진행 바 애니메이션 */
.progress-fill {
    position: relative;
}

.progress-fill::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transform: translateX(-100%);
    animation: progressShine 2s ease-in-out infinite;
}

@keyframes progressShine {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}

/* =============================================================================
   호버 및 상호작용 애니메이션
   ============================================================================= */

/* 버튼 클릭 효과 */
.nav-btn {
    position: relative;
    overflow: hidden;
}

.nav-btn::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: all 0.3s ease;
}

.nav-btn:active::before {
    width: 100px;
    height: 100px;
}

/* 카드 호버 효과 개선 */
.stat-card,
.feature-card,
.highlight-card,
.contact-item {
    position: relative;
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* 플로팅 애니메이션 */
@keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
}

.feature-card:nth-child(1) {
    animation: float 6s ease-in-out infinite;
}

.feature-card:nth-child(2) {
    animation: float 6s ease-in-out infinite;
    animation-delay: 2s;
}

.feature-card:nth-child(3) {
    animation: float 6s ease-in-out infinite;
    animation-delay: 4s;
}

/* =============================================================================
   텍스트 애니메이션
   ============================================================================= */

/* 타이핑 효과 */
.typing-effect {
    overflow: hidden;
    border-right: 2px solid var(--accent);
    white-space: nowrap;
    animation: typing 2s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
    from { width: 0; }
    to { width: 100%; }
}

@keyframes blink-caret {
    from, to { border-color: transparent; }
    50% { border-color: var(--accent); }
}

/* 글자별 페이드인 효과 */
.letter-animation {
    display: inline-block;
    opacity: 0;
    animation: letterFadeIn 0.8s ease-out forwards;
}

@keyframes letterFadeIn {
    0% {
        opacity: 0;
        transform: translateY(20px) rotateX(90deg);
    }
    100% {
        opacity: 1;
        transform: translateY(0) rotateX(0deg);
    }
}

/* =============================================================================
   배경 애니메이션
   ============================================================================= */

/* 그라데이션 이동 애니메이션 */
.slide {
    background-size: 400% 400%;
    animation: gradientShift 15s ease infinite;
}

@keyframes gradientShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

/* 파티클 효과 (CSS로 구현) */
.slide::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
        radial-gradient(2px 2px at 40px 60px, rgba(255, 255, 255, 0.1), transparent),
        radial-gradient(2px 2px at 120px 20px, rgba(255, 255, 255, 0.1), transparent),
        radial-gradient(1px 1px at 90px 40px, rgba(255, 255, 255, 0.1), transparent),
        radial-gradient(1px 1px at 20px 100px, rgba(255, 255, 255, 0.1), transparent);
    background-size: 200px 120px;
    animation: particleMove 20s linear infinite;
    pointer-events: none;
    z-index: 1;
}

@keyframes particleMove {
    0% { transform: translateY(0px); }
    100% { transform: translateY(-120px); }
}

/* =============================================================================
   로딩 애니메이션
   ============================================================================= */

/* 로딩 스피너 개선 */
.loading-spinner {
    position: relative;
}

.loading-spinner::after {
    content: '';
    position: absolute;
    top: 5px;
    left: 5px;
    right: 5px;
    bottom: 5px;
    border: 2px solid transparent;
    border-top: 2px solid rgba(255, 255, 255, 0.6);
    border-radius: 50%;
    animation: spin 1.5s linear infinite reverse;
}

/* 로딩 텍스트 애니메이션 */
.loading-content p {
    animation: loadingPulse 2s ease-in-out infinite;
}

@keyframes loadingPulse {
    0%, 100% { opacity: 0.7; }
    50% { opacity: 1; }
}

/* =============================================================================
   반응형 애니메이션 최적화
   ============================================================================= */

/* 모바일에서 애니메이션 간소화 */
@media (max-width: 768px) {
    .slide::before {
        display: none; /* 파티클 효과 제거 */
    }
    
    .feature-card {
        animation: none; /* 플로팅 애니메이션 제거 */
    }
    
    .slide {
        animation: none; /* 배경 그라데이션 애니메이션 제거 */
    }
}

/* 저전력 모드에서 애니메이션 최적화 */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
    
    .slide::before {
        display: none;
    }
    
    .progress-fill::after {
        display: none;
    }
}

/* =============================================================================
   전환 효과 변형 (추후 활용 가능)
   ============================================================================= */

/* 페이드 전환 */
.slide.fade-in {
    animation: fadeIn 0.8s ease-in-out;
}

.slide.fade-out {
    animation: fadeOut 0.8s ease-in-out;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}

/* 스케일 전환 */
.slide.scale-in {
    animation: scaleIn 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

@keyframes scaleIn {
    0% {
        opacity: 0;
        transform: scale(0.9);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

/* 회전 전환 */
.slide.rotate-in {
    animation: rotateIn 1s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

@keyframes rotateIn {
    0% {
        opacity: 0;
        transform: rotateY(90deg);
    }
    100% {
        opacity: 1;
        transform: rotateY(0deg);
    }
}

/* =============================================================================
   성능 최적화
   ============================================================================= */

/* GPU 가속 활성화 */
.slide,
.nav-btn,
.stat-card,
.feature-card,
.highlight-card {
    will-change: transform;
    transform: translateZ(0);
}

/* 애니메이션 완료 후 will-change 제거 */
.slide.animation-complete,
.slide.animation-complete * {
    will-change: auto;
}
